.fieldrad .MuiOutlinedInput-root {
  border-radius: 50px;
}
.startpict{
  align-items: bottom;
}

@keyframes scroll {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(calc(-100% - 1rem));
  }
}
.scroll {
  animation: scroll 60s linear infinite;
}
.reverse {
  animation-direction: reverse;
}

/* .landing-page-block-217 {
  -webkit-transform:translate3d(0%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(0%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(0%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(0%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)
}

.landing-page-hero_title {
  -webkit-transform:translate3d(0, 100%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(0, 100%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(0, 100%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(0, 100%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)
}

.landing-page-hero_title_secondline {
  -webkit-transform:translate3d(0, 100%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(0, 100%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(0, 100%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(0, 100%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)
}

.landing-page-bodytext-creator {
  opacity:0;-webkit-transform:translate3d(0, 30%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(0, 30%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(0, 30%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(0, 30%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)
}

.landing-page-perspective-container {
  -webkit-transform:translate3d(0, 8%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(0, 8%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(0, 8%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(0, 8%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);opacity:0
}

.landing-page-perspective-mockup {
  -webkit-transform:translate3d(0, 0vh, 0) scale3d(1, 1, 1) rotateX(24deg) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(0, 0vh, 0) scale3d(1, 1, 1) rotateX(24deg) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(0, 0vh, 0) scale3d(1, 1, 1) rotateX(24deg) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(0, 0vh, 0) scale3d(1, 1, 1) rotateX(24deg) rotateY(0) rotateZ(0) skew(0, 0);transform-style:preserve-3d;opacity:1
} */

/* ALL PAGES CSS */
/* Your max width code replaces the code below */
@media only screen and (min-width: 1560px) {
	body {font-size: 0.975em;}
}
/* Desktop Only CSS (i.e. hover states) */
@media only screen and (min-width: 992px) {
}
/* Main Variables */
:root {
  --main-dark: black;
  --main-light: white;
}
.img_item.active { 
  opacity: 1; 
}
.tab_item.active .tab_subtitle {height: auto;}
.tab_item.active .stepsubtitle {color: white;}
.tab_item.active .tab_progress {opacity: 1;}
/* Global Styles */
::selection {
	background: var(--main-dark);
  color: var(--main-light);
  text-shadow: none;
}
img::selection, svg::selection {
	background: transparent;
}
/* Link color inherits from parent font color  */
a {
	color: inherit;
}
/* Disable / enable clicking on an element and its children  */
.no-click {
	pointer-events: none;
}
.can-click {
	pointer-events: auto;
}
/* Target any element with a certain "word" in the class name  */
[class*="spacer"] {
}

a {color: inherit;}
.cursor_wrapper {
  pointer-events: none;
}
@media screen and (min-width: 768px) {
  .hover_component:hover .cursor_wrapper {
    transform: scale(1);
    opacity: 1;
  }
}


/* Creator Page Style */

@keyframes scroll {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(calc(-100% - 1rem));
  }
}
.scroll {
  animation: scroll 60s linear infinite;
}
.reverse {
  animation-direction: reverse;
}

/* ALL PAGES CSS */
/* Your max width code replaces the code below */
@media only screen and (min-width: 1560px) {
	body {font-size: 0.975em;}
}
/* Desktop Only CSS (i.e. hover states) */
@media only screen and (min-width: 992px) {
}
/* Main Variables */
:root {
  --main-dark: black;
  --main-light: white;
}
.img_item.active { 
  opacity: 1; 
}
.tab_item.active .tab_subtitle {height: auto;}
.tab_item.active .stepsubtitle {color: white;}
.tab_item.active .tab_progress {opacity: 1;}
/* Global Styles */
::selection {
	background: var(--main-dark);
  color: var(--main-light);
  text-shadow: none;
}
img::selection, svg::selection {
	background: transparent;
}
/* Link color inherits from parent font color  */
a {
	color: inherit;
}
/* Disable / enable clicking on an element and its children  */
.no-click {
	pointer-events: none;
}
.can-click {
	pointer-events: auto;
}
/* Target any element with a certain "word" in the class name  */
[class*="spacer"] {
}

.lottie-hero > svg { 
  transform: unset !important; 
}

.lottie-hero {
  height: 56px;
  position: relative;
}

/* .navbar {
  display: block !important;
  opacity: 1 !important;
}

.main-wrapper {
  display: block !important;
} */

.MuiChip-root {
  border-radius: 6px !important;
  background: rgba(187, 220, 210, 0.16) !important;
  color: #BBDCD2 !important;
  border: 1px solid #BBDCD2 !important;
}

.MuiChip-deleteIcon {
  color: #BBDCD2 !important;
}